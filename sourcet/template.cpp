/*===========================================
        GRRLIB (GX Version)
        Example code by Xane

        This example shows a basic particle
        engine creating a Smokebomb.
============================================*/
#include <grrlib.h>

#include <stdlib.h>
#include <wiiuse/wpad.h>
#include <math.h>
#include <ogc/lwp_watchdog.h>
#include <vector>
#include <unistd.h>
#include <stdio.h>
#include <time.h>
#include <gccore.h>
#include <asndlib.h>
#include <mp3player.h>
#include <fontCodec_ttf.h>


// Include Graphics
#include "GFX/RGFX_Pic1.h"
#include "GFX/RGFX_Pic2.h"
#include "GFX/RGFX_Pic3.h"
#include "GFX/RGFX_Pic4.h"
#include "GFX/RGFX_Pic5.h"
#include "GFX/RGFX_Pic6.h"
#include "GFX/RGFX_Pic7.h"
#include "GFX/RGFX_Pic8.h"
#include "GFX/RGFX_Pic9.h"
#include "GFX/RGFX_Pic10.h"
#include "GFX/RGFX_Pic11.h"
#include "GFX/RGFX_Pic12.h"
#include "GFX/RGFX_Pic13.h"
#include "GFX/RGFX_Pic14.h"
#include "GFX/RGFX_menu2.h"
#include "GFX/RGFX_Crosshair.h"
#include "GFX/RGFX_Smoke.h"
#include "GFX/RGFX_Font.h"

#include <icon_png.h>
#include <palm_png.h>
#include <palmeraie_png.h>
#include <billet_png.h>
#include <menu1_png.h>
#include <menu2_png.h>
#include <menu5_png.h>
#include <menu6_png.h>
#include <menuj1_png.h>
#include <menuj1a_png.h>
#include <menuj2_png.h>
#include <menuj2a_png.h>
#include <menuj3_png.h>
#include <menuj3a_png.h>
#include <menur_png.h>
#include <menura_png.h>
#include <over_png.h>
#include <over2_png.h>
#include<jeton_png.h>
#include <jeu1_png.h>
#include <jeu1fr_png.h>
#include <jeu2_png.h>
#include <jeu2fr_png.h>
#include <image_png.h>
#include <image2_png.h>
#include <image3_png.h>
#include <image4_png.h>
#include <jeu3intro_png.h>
#include <jeu3_png.h>
#include <over3_png.h>
#include <gagne3_png.h>
#include <meta_png.h>
#include <verredroit_png.h>
#include <verremoit_png.h>
#include <verreplein_png.h>
#include <verreret_png.h>
#include <verretier_png.h>
#include <verretourner_png.h>
#include <vodkad_png.h>
#include <vodkainc_png.h>
#include <vodkaverse_png.h>
#include <panneau_png.h>
#include <conchita_png.h>

#include "gfx/BMfont5.h"
#include <tile1_png.h>
#include <perso_png.h>
#include <bg_png.h>
#include <nonameno_png.h>
#include "metro_mp3.h"
#include "conchitasound_mp3.h"
#include "tir_mp3.h"
#include "IntroMenu_mp3.h"
#include "fin_mp3.h"
#include "fin2_mp3.h"
#include "eau_mp3.h"

#define GRRLIB_GREEN   0x008000FF


// Define Effects
#define EFFECT_SMOKEBOMB    1

// Random Number (0 - 1) in float
#define RANDOM   ((((float)(rand() % 12))/12)-0.5)

#define TileMap1Width (32)
#define TileMap1Height (32)
#define Map1Width (87)
#define Map1Height (51)

signed short Map1Data[51][87] =
  {{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
    6, 6, 6, 6, 6, 6, 6, 7, 2, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  { 0, 0, 0,10,11,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  { 0, 0, 0, 0, 0,13,14,15,16,17,18,19,20,21,22,23,24, 0, 0, 0,25,26, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,27,28, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0,29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,30,31,32, 0, 0, 0, 0, 0,33,34, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0,35,36,36,36,36, 0, 0, 0, 0, 0,35,36,36, 0, 0, 0, 3, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0,37,38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,39,40,41, 0, 0, 0, 0, 0,42,43, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
   44,44,44,44,44,44,44,44, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 2, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,45, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
   44,44,44,44,44,44,44,44, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,46, 9, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,47,48,48,48,48,48,48,48,48,48,48,48,
   49,50, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  {51,52,53,54,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
   55,55,55,55,55,55,55,55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  {58,59,60,61,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
   62,62,62,62,62,62,62,62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  {63,64,65,66,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
   67,67,67,67,67,67,67,67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  {62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
   62,62,62,62,62,62,62,62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  {62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
   62,62,62,62,62,62,62,62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
   44,44,44,44,44,44,44,44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0},
  {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
   44,44,44,44,44,44,44,44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0,
    0, 0, 0, 0,30,31,32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,25,26, 0, 0, 0, 0, 0,
   56,57, 0,30,31,32, 0, 8, 9, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0,
    0, 0, 0, 0,39,40,41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,27,28, 0, 0, 0, 0, 0,
   56,57, 0,39,40,41, 0, 8, 9, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0,
    0, 0, 3, 0, 0,45, 0, 0, 0, 0, 0, 0,37,38, 0, 0, 0, 0, 0, 0, 0, 0, 0,37,38,
   56,57, 0, 0,45, 0, 0, 8, 9, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8,46, 6, 6, 6,
    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,68,69, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
   56,57, 6, 6, 6, 6, 6, 5,70, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0,30,31,32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,25,26, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,33,34, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0,39,40,41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,27,28, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,42,43, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0,45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0,73, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5,70, 0, 0, 0,
   74,75,76, 0, 0, 0, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   77,78,79, 0, 0, 0, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   80,81,82, 0, 0, 0, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0,68,83,84,84,84,84,84,83,69, 0, 0, 0, 0, 0, 0,68,83,84,84,84,84,84,84,
   84,84,83,69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,68,83,84,84,84,84,84,
   84,84,84,84,84,84,84,84,84,84,84,84,85,86, 0, 0, 0, 0, 0, 0,30,31,32, 0, 0,
   56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,
    0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,39,40,41, 0, 0,
   56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,
    0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,45, 0, 0, 0,
   56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,
    0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0,30,31,32, 0, 0,71,72, 0, 0, 0,87,49,
   48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
   88,89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,
    0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0,39,40,41, 0, 0,71,72, 0, 0, 0,56,57,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,
    0, 0,71,72, 0, 0, 0, 0, 0, 0,37,38, 0, 0,45, 0, 0, 0,71,72, 0, 0, 0,56,57,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,
    0, 0,90,85,84,84,84,84,84,84,87,50,84,84,84,84,84,84,85,86, 0, 0, 0,56,57,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0,87,49,48,
   49,50, 0, 0, 0, 0, 0, 0, 0, 0,56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,56,57,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0,25,26, 0, 0,71,72, 0, 0, 0,56,57, 0,
   56,57, 0, 0, 0, 0, 0, 0, 0, 0,56,91,48,48,48,48,48,48,48,48,48,48,48,88,89,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0,27,28, 0, 0,71,72, 0, 0, 0,56,57, 0,
   92,88,48,48,48,48,48,48,48,48,88,89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0,56,57, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0,71,72, 0, 0, 0, 0, 0,90,85,84,84,84,84,84,84,85,86, 0, 0, 0,56,57, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0,93,94,94,95,96,97,98,99},
  { 0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,56,57, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0,87,49,48,48,48,48,48,48,48,48,48,48,49,50, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0,100,101,102,103,104,105,106,107},
  { 0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0,30,31,32, 0, 0, 0, 0, 0, 0,92,88,48,
   48,48,49,50, 0, 0, 0, 0, 0,56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,56,57, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0,108,109,110,111,112,113,114,115},
  { 0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0,39,40,41, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0,56,57, 0, 0, 0, 0, 0,92,88,48,48,49,50, 0, 0, 0, 0, 0, 0,56,57, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0,116,117,118,119,120,121,122,123},
  { 0, 0,71,72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0,56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0,56,57, 0, 0, 0, 0, 0, 0,56,57, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0,124,125,126,127,128,129,130,131},
  { 0, 0,71,72, 0, 0, 0, 0, 0, 0,68,83,84,84,84,84,84,83,69, 0, 0, 0, 0, 0, 0,
    0, 0,56,57, 0, 0, 0, 0, 0, 0, 0, 0, 0,56,57, 0, 0, 0, 0, 0, 0,56,57, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,132,133,134,135, 0,25,26, 0,30,31,32,
    0, 0, 0, 0, 0, 0,136,137,138,139,140,141,142,143},
  { 0, 0,71,72, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,
    0, 0,56,57, 0, 0, 0, 0,30,31,32, 0, 0,56,57, 0, 0, 0, 0, 0, 0,56,57, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,27,28, 0,39,40,41, 0, 0,
    0, 0, 0, 0,144,145,146,147,148,149,150,151},
  { 0, 0,71,72, 0, 0,152,153, 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0,
    0, 0, 0,56,57, 0, 0, 0, 0,39,40,41, 0, 0,56,57, 0, 0, 0, 0, 0, 0,56,57,37,
   38, 0, 0, 0, 0,35,36,36,36, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,45, 0, 0,
    0, 0, 0, 0, 0,154,155,156,157,158,159,160,161},
  { 0, 0,71,72, 0, 0,162,163, 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0,
    0, 0, 0,56,57, 0, 0, 0, 3, 0,45, 0, 0, 0,56,57, 0, 0, 0, 0, 0, 0,44,44,44,
   44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
   44,44,44,44,44,164,164,164,164,164,164,164,164},
  { 0, 0,71,72, 0, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,
    0, 0,92,88,48,48,48,48,48,48,48,48,48,88,89, 0, 0, 0, 0, 0, 0,55,55,55,55,
   55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
   55,55,55,55,164,164,164,164,164,164,164,164},
  { 0, 0,90,85,84,84,84,84,84,84,85,86, 0, 0, 0, 0, 0,71,72, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,62,62,62,62,
   62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
   62,62,62,62,164,164,164,164,164,164,164,164},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,90,86, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,62,62,62,62,
   62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
   62,62,62,62,164,164,164,164,164,164,164,164},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,62,62,62,62,
   62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
   62,62,62,62,164,164,164,164,164,164,164,164}};

signed int Map1Info[51][87] =
  {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
   8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,2,2,2,2,0,0,0,0,15,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,0,0,2,2,2},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
   8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,
   1,1,1,1,1,1,1,1,43786,43786,2,2,2},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
   8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,2,2,43786,43786,2,2,2},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
   8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,2,2,43786,43786,2,2,2},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
   8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,2,2,43786,43786,2,2,2},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,2,2,43786,43786,2,2,2},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,2,2,2,2,2,2,0,0,0,10,10,10,10,10,
   0,0,2,2,2,2,2,2,2,2,2,43786,43786,2,2,2},
  {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,2,2,2,2,2,2,0,0,0,10,10,10,10,10,
   0,0,0,0,0,0,2,2,2,2,2,43786,43786,2,2,2},
  {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
   1,1,1,1,1,1,1,1,43786,43786,8,8,8,8,8,8,8,8,8,8,2,2,2,2,2,2,10,0,10,15,10,
   10,10,10,10,0,0,0,0,0,2,2,2,2,2,43786,43786,2,2,2},
  {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
   1,1,1,1,1,1,1,1,43786,43786,8,8,8,8,8,8,8,8,8,8,2,2,2,2,2,2,1,1,1,1,1,1,1,
   1,1,1,1,1,43786,43786,2,2,2,2,2,43786,43786,2,2,2},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,8,2,8,
   8,8,8,8,8,8,8,8,43786,43786,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,10,10,10,10,
   10,10,10,10,10,8,8,43786,43786,2,2,2,2,2,43786,43786,2,2,2},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,2,2,
   2,8,8,8,8,8,8,8,43786,43786,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,10,10,10,10,
   10,10,10,10,10,10,10,43786,43786,2,2,2,2,2,43786,43786,2,2,2},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,
   2,2,2,2,8,8,8,8,43786,43786,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,2,2,8,
   8,10,8,8,8,43786,43786,2,2,2,2,2,43786,43786,2,2,2},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,
   8,8,8,2,2,2,8,8,43786,43786,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,2,
   8,8,8,8,8,43786,43786,2,2,2,2,2,43786,43786,2,2,2},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,
   8,8,8,8,2,2,2,2,43786,43786,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,
   2,8,8,8,8,43786,43786,2,2,2,2,2,43786,43786,2,2,2},
  {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8,8,8,8,
   8,8,8,8,8,8,8,8,43786,43786,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
   8,2,2,8,8,43786,43786,2,2,2,2,2,43786,43786,2,2,2},
  {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8,8,8,8,
   8,8,8,8,8,8,8,8,43786,43786,8,8,8,8,8,8,8,0,0,0,8,8,8,8,8,8,8,8,8,8,8,0,0,
   8,8,2,2,2,43786,43786,2,0,0,0,2,43786,43786,2,2,2},
  {2,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
   8,8,8,8,8,8,8,8,43786,43786,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,43786,43786,0,0,0,0,0,43786,43786,2,2,2},
  {2,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
   8,8,8,8,8,8,8,8,43786,43786,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,43786,43786,0,0,0,0,0,43786,43786,2,2,2},
  {2,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
   8,8,8,8,8,8,8,8,43786,43786,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,43786,43786,1,1,
   1,1,1,1,1,1,1,1,1,43786,43786,1,1,1,1,1,1,1,2,2,2},
  {2,8,8,8,8,8,8,8,0,0,0,8,8,8,8,8,8,8,8,8,8,8,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,
   8,0,0,8,8,8,8,8,43786,43786,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,43786,43786,2,2,
   2,2,2,2,2,2,2,2,2,43786,43786,2,2,2,2,2,2,2,2,2,2},
  {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,43786,43786,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,43786,43786,2,2,
   2,2,2,2,2,2,2,2,2,43786,43786,2,2,2,2,2,2,2,2,2,2},
  {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,43786,43786,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,43786,43786,2,2,
   2,2,2,2,2,2,2,2,2,43786,43786,2,2,2,2,2,2,2,2,2,2},
  {2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
   1,1,1,1,1,1,1,1,1,1,2,2,2,0,0,0,2,2,2,2,2,2,2,2,2,43786,43786,2,2,2,2,2,2,
   2,2,2,2,2,43786,43786,2,2,2,2,2,2,2,2,2,2},
  {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,8,8,8,8,2,2,2,0,0,0,2,2,2,2,2,2,2,2,2,43786,43786,2,2,2,2,2,2,
   2,2,2,2,2,43786,43786,2,2,2,2,2,2,2,2,2,2},
  {2,8,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43786,43786,2,2,2,2,2,2,
   2,2,2,2,2,43786,43786,2,2,2,2,2,2,2,2,2,2},
  {2,8,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43786,43786,2,2,2,2,2,2,
   2,2,2,2,2,43786,43786,2,2,2,2,2,2,2,2,2,2},
  {2,2,43786,43786,1,1,1,1,1,43786,43786,2,2,2,2,2,2,43786,43786,1,1,1,1,1,1,
   1,1,43786,43786,2,2,2,2,2,2,2,2,2,2,2,2,2,2,43786,43786,1,1,1,1,1,1,1,1,1,
   1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,0,0,0,2,2,43786,43786,2,2,2,2,2,2,2,2,2,2},
  {2,2,43786,43786,2,2,2,2,2,43786,43786,2,2,2,2,2,2,43786,43786,2,2,2,2,2,2,
   2,2,43786,43786,2,2,2,2,2,2,2,2,2,2,2,2,2,2,43786,43786,2,2,2,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43786,43786,2,2,2,2,2,2,2,2,2,2},
  {2,2,43786,43786,2,2,2,2,2,43786,43786,2,2,2,2,2,2,43786,43786,2,2,2,2,2,2,
   2,2,43786,43786,2,2,2,2,2,2,2,2,2,2,2,2,2,2,43786,43786,2,2,2,0,0,0,0,0,0,
   0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,43786,43786,2,2,2,2,2,2,2,2,2,
   2},
  {2,2,43786,43786,2,8,8,8,2,43786,43786,2,2,2,2,2,2,43786,43786,2,2,2,2,2,2,
   2,2,43786,43786,2,2,2,2,2,2,2,2,2,0,0,0,2,2,43786,43786,2,2,2,43786,43786,
   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2},
  {2,2,43786,43786,2,8,8,8,2,43786,43786,2,2,2,2,2,2,43786,43786,2,2,2,2,2,2,
   2,2,43786,43786,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43786,43786,2,2,2,43786,43786,
   2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
  {2,2,43786,43786,2,8,8,8,2,43786,43786,2,2,2,2,2,2,43786,43786,2,2,2,0,0,0,
   0,0,43786,43786,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43786,43786,2,2,2,43786,43786,
   2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
  {2,2,43786,43786,2,8,8,8,2,43786,43786,2,2,2,2,2,2,43786,43786,2,2,2,0,0,0,
   0,0,1,1,1,1,1,1,1,1,43786,43786,1,1,1,1,1,1,1,1,0,0,0,43786,43786,2,2,2,2,
   2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
  {2,2,43786,43786,2,8,8,8,2,43786,43786,2,2,2,2,2,2,43786,43786,2,2,2,43786,
   43786,1,43786,43786,0,0,0,0,0,0,0,0,43786,43786,0,0,0,0,0,0,0,0,0,0,0,43786,
   43786,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
   2,2,2},
  {2,2,43786,43786,2,8,8,8,2,43786,43786,2,2,0,0,2,2,43786,43786,2,2,2,43786,
   43786,2,43786,43786,0,0,0,0,0,0,0,0,43786,43786,1,1,1,1,1,1,1,1,1,1,1,1,1,
   1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
  {2,2,43786,43786,2,8,8,8,2,43786,43786,0,0,0,0,0,0,43786,43786,2,2,2,43786,
   43786,2,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
  {2,2,43786,43786,2,8,8,8,2,43786,43786,0,0,0,0,0,0,43786,43786,2,2,2,43786,
   43786,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
  {2,2,43786,43786,2,8,8,8,1,1,1,1,1,1,1,1,1,1,1,1,2,2,43786,43786,0,0,0,0,0,
   8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
   2,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0},
  {2,2,43786,43786,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,43786,43786,0,0,0,0,0,
   8,8,8,8,8,43786,43786,1,1,1,1,1,1,1,1,1,1,43786,43786,2,2,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,2,2,2,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0},
  {2,2,43786,43786,2,2,2,2,2,2,2,2,2,0,0,0,2,2,2,2,2,2,43786,43786,1,1,1,43786,
   43786,8,8,8,8,8,43786,43786,0,0,0,0,2,2,2,2,2,2,43786,43786,2,2,2,2,2,2,2,
   2,2,2,2,2,2,2,2,2,2,2,2,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0},
  {2,2,43786,43786,2,2,2,2,2,8,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,43786,43786,
   8,8,8,8,8,1,1,1,1,43786,43786,2,2,2,2,2,2,43786,43786,2,2,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,2,2,2,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {2,2,43786,43786,2,2,2,2,2,8,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,43786,43786,
   8,8,8,8,8,8,8,8,8,43786,43786,2,2,2,2,2,2,43786,43786,2,2,2,2,2,2,2,2,2,2,
   8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {2,2,43786,43786,8,8,8,8,8,8,43786,43786,1,1,1,1,1,43786,43786,8,8,8,8,8,8,
   8,8,43786,43786,8,8,8,8,8,8,8,8,8,43786,43786,2,2,2,2,2,2,43786,43786,2,2,
   2,2,2,2,2,2,2,2,8,8,8,8,0,0,0,0,8,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {2,2,43786,43786,8,8,8,8,8,8,43786,43786,2,2,2,2,2,43786,43786,8,8,2,8,8,8,
   2,2,43786,43786,8,8,8,8,0,0,0,8,8,43786,43786,2,2,2,8,2,2,43786,43786,0,0,
   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {2,2,43786,43786,8,8,0,0,8,8,43786,43786,2,2,2,2,2,43786,43786,8,8,0,0,0,0,
   0,0,43786,43786,0,0,0,0,0,0,0,0,0,43786,43786,2,2,2,8,2,2,43786,43786,0,0,
   0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,0,
   0},
  {2,2,43786,43786,0,0,0,0,0,0,43786,43786,2,2,2,2,2,43786,43786,8,8,0,0,0,0,
   0,0,43786,43786,0,0,0,15,0,0,0,0,0,43786,43786,2,2,2,8,1,1,1,1,1,1,1,1,1,
   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0},
  {2,2,43786,43786,0,0,0,0,0,0,43786,43786,2,2,2,2,2,43786,43786,8,8,1,1,1,1,
   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {2,2,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,43786,43786,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,2,2,2,2,2,2,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
   2,2,2,2,2,2,2,2,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,0,0,0},
  {2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
   1,1,1,1,1,1,1,1,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,0,0,0}};


   
   
   
using std::vector;
Mtx GXmodelView2D;

// Basic structure to hold particle data
typedef struct Particle {
    u8 id;
    float x, y;
    float sx, sy;
    u16 rot;
    u8 frame, framecnt;
    u8 red, green, blue;
    float scale, alpha;
    float sscale, salpha;
    float scolor;
    GRRLIB_texImg *tex;
} Particle;

// Vector used as a container to iterate through all members of GRRLIB_texImg
static vector<GRRLIB_texImg *> TextureList;
static vector<Particle *> ParticleList;
static vector<Particle *> ParticleListTmp;



// Declare static functions
static void ExitGame();

static void createEffect( u8 id, int _x, int _y );
static void createParticle( u8 _id, int _x, int _y, float _scale, float _alpha, u8 _red, u8 _green, u8 _blue );
static bool updateParticle( Particle *part );
static u8 CalculateFrameRate();
static u8 ClampVar8 (f32 Value);

// Initialize general variables
extern GXRModeObj *rmode;
ir_t P1Mote;
short WinW;
short WinH;
int P1MX, P1MY;

// Prepare Graphics
GRRLIB_texImg *GFX_Pic1;
GRRLIB_texImg *GFX_Pic2;
GRRLIB_texImg *GFX_Pic3;
GRRLIB_texImg *GFX_Pic4;
GRRLIB_texImg *GFX_Pic5;
GRRLIB_texImg *GFX_Pic6;
GRRLIB_texImg *GFX_Pic7;
GRRLIB_texImg *GFX_Pic8;
GRRLIB_texImg *GFX_Pic9;
GRRLIB_texImg *GFX_Pic10;
GRRLIB_texImg *GFX_Pic11;
GRRLIB_texImg *GFX_Pic12;
GRRLIB_texImg *GFX_Pic13;
GRRLIB_texImg *GFX_Pic14;
GRRLIB_texImg *GFX_Crosshair;
GRRLIB_texImg *GFX_Smoke;
GRRLIB_texImg *GFX_Font;

void menu();

void menujeu();

void credits();

void print3();

void credits2() {
	GRRLIB_texImg* pic1;
	pic1=GRRLIB_LoadTexture(image_png);
	GRRLIB_texImg* pic2;
	pic2=GRRLIB_LoadTexture(image2_png);
	GRRLIB_texImg* pic3;
	pic3=GRRLIB_LoadTexture(image3_png);
	
	ASND_Init();
      MP3Player_Init();
	MP3Player_PlayBuffer(fin_mp3,fin_mp3_size,NULL);
	
	int i;
	for(i=0;i<255;i++) {

        GRRLIB_DrawImg(0,0,pic1,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();

		}
	GRRLIB_FreeTexture(pic1);

	for(i=0;i<255;i++) {

        GRRLIB_DrawImg(0,0,pic2,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();
		}
	GRRLIB_FreeTexture(pic2);


	for(i=0;i<255;i++) {

        GRRLIB_DrawImg(0,0,pic3,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();
		}
	GRRLIB_FreeTexture(pic3);

	MP3Player_Stop();
	
	menu();

}

void conchita() {

	GRRLIB_texImg* pic1;
	pic1=GRRLIB_LoadTexture(conchita_png);
	GRRLIB_texImg* pic2;
	pic2=GRRLIB_LoadTexture(meta_png);
	
	ASND_Init();
      MP3Player_Init();
     
	 
	int i;
	for(i=0;i<100;i++) {

        GRRLIB_DrawImg(0,0,pic2,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();
		}
	GRRLIB_FreeTexture(pic2);

	MP3Player_PlayBuffer(conchitasound_mp3,conchitasound_mp3_size,NULL);

	for(i=0;i<255;i++) {

        GRRLIB_DrawImg(0,0,pic1,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();
		}
	GRRLIB_FreeTexture(pic1);
	
	MP3Player_Stop();
	
	credits2();

}

void win() {
	GRRLIB_texImg* over;
	over=GRRLIB_LoadTexture(gagne3_png);
	int i;
	for(i=0;i<255;i++) {

        GRRLIB_DrawImg(0,0,over,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();
		}
	GRRLIB_FreeTexture(over);
	conchita();
}

void printover1() {
	GRRLIB_texImg* over;
	over=GRRLIB_LoadTexture(over_png);
	int i;
	for(i=0;i<255;i++) {

        GRRLIB_DrawImg(0,0,over,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();
		}
	GRRLIB_FreeTexture(over);
	menujeu();
}

void printover2() {
	GRRLIB_texImg* over;
	over=GRRLIB_LoadTexture(over2_png);
	int i;
	for(i=0;i<255;i++) {

        GRRLIB_DrawImg(0,0,over,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();
		}
	GRRLIB_FreeTexture(over);
	menujeu();
}

void printover3() {
	GRRLIB_texImg* over;
	over=GRRLIB_LoadTexture(over3_png);
	int i;
	for(i=0;i<255;i++) {

        GRRLIB_DrawImg(0,0,over,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();
		}
	GRRLIB_FreeTexture(over);
	menujeu();
}

void game2() {
  u32 WPADKeyDown;

 s8 page = 0;
    u8 FPS = 0;
    u32 ParticleCnt = 0;

    // Init GRRLIB & WiiUse
    GRRLIB_Init();
    WinW = rmode->fbWidth;
    WinH = rmode->efbHeight;
    WPAD_Init();
    WPAD_SetIdleTimeout( 60*10 );
    WPAD_SetDataFormat( WPAD_CHAN_0, WPAD_FMT_BTNS_ACC_IR );

	

    // Load textures

    GFX_Pic1 = GRRLIB_LoadTextureJPG(RGFX_Pic1);
    GFX_Pic2 = GRRLIB_LoadTextureJPG(RGFX_Pic2);
    GFX_Pic3 = GRRLIB_LoadTextureJPG(RGFX_Pic3);
    GFX_Pic4 = GRRLIB_LoadTextureJPG(RGFX_Pic4);
    GFX_Pic5 = GRRLIB_LoadTextureJPG(RGFX_Pic5);
    GFX_Pic6 = GRRLIB_LoadTextureJPG(RGFX_Pic6);
    GFX_Pic7 = GRRLIB_LoadTextureJPG(RGFX_Pic7);
    GFX_Pic8 = GRRLIB_LoadTextureJPG(RGFX_Pic8);
    GFX_Pic10 = GRRLIB_LoadTextureJPG(RGFX_Pic10);
    GFX_Pic11 = GRRLIB_LoadTextureJPG(RGFX_Pic11);
    GFX_Pic12 = GRRLIB_LoadTextureJPG(RGFX_Pic12);
    GFX_Pic13 = GRRLIB_LoadTextureJPG(RGFX_Pic13);
    GFX_Pic14 = GRRLIB_LoadTextureJPG(RGFX_Pic14);
    GFX_Pic9 = GRRLIB_LoadTextureJPG(RGFX_Pic9);
    GFX_Crosshair  = GRRLIB_LoadTexturePNG(RGFX_Crosshair);
    GFX_Smoke      = GRRLIB_LoadTexturePNG(RGFX_Smoke);
    GFX_Font       = GRRLIB_LoadTexturePNG(RGFX_Font);
    GRRLIB_InitTileSet( GFX_Font, 8, 16, 32 );

    // Set handles
    GRRLIB_SetMidHandle( GFX_Crosshair, true );
    GRRLIB_SetMidHandle( GFX_Smoke, true );

	 ASND_Init();
		MP3Player_Init();
		

    // Feed the vector with the textures
    TextureList.push_back( GFX_Pic1 );
    TextureList.push_back( GFX_Pic2 );
    TextureList.push_back( GFX_Pic3 );
    TextureList.push_back( GFX_Pic4 );
    TextureList.push_back( GFX_Pic5 );
    TextureList.push_back( GFX_Pic6 );
    TextureList.push_back( GFX_Pic7 );
    TextureList.push_back( GFX_Pic8 );
    TextureList.push_back( GFX_Pic9 );
    TextureList.push_back( GFX_Pic10 );
    TextureList.push_back( GFX_Pic11 );
    TextureList.push_back( GFX_Pic12 );
    TextureList.push_back( GFX_Pic13 );
    TextureList.push_back( GFX_Pic14 );
    TextureList.push_back( GFX_Crosshair );
    TextureList.push_back( GFX_Smoke );
    TextureList.push_back( GFX_Font );

    int point=0;
	int p=60;

    while (true) {
        WPAD_ScanPads();
        WPADKeyDown = WPAD_ButtonsDown(WPAD_CHAN_0);

        WPAD_SetVRes(WPAD_CHAN_0, WinW, WinH);
        WPAD_IR(WPAD_CHAN_0, &P1Mote);

        // Resetting Vars
      GRRLIB_SetBlend( GRRLIB_BLEND_ALPHA );
        ParticleCnt = 0;

        // WiiMote IR Viewport correction
        P1MX = P1Mote.sx - 150;
        P1MY = P1Mote.sy - 150;

		         if(WPAD_ButtonsDown(0) & WPAD_BUTTON_B) {
		 
		 MP3Player_PlayBuffer(tir_mp3,tir_mp3_size,NULL);
		 
		 
		 }

        // Add any pending objects into the main container
        if (ParticleListTmp.size()) {
            for(u32 i = 0; i<ParticleListTmp.size();i++) {
                ParticleList.push_back(ParticleListTmp[i]);
            }
            ParticleListTmp.clear();
        }

        // Update and draw all particles
        for (vector<Particle *>::iterator PartIter = ParticleList.begin(); PartIter != ParticleList.end();) {
            if (updateParticle((*PartIter)) == true) {
                GRRLIB_DrawImg( (*PartIter)->x, (*PartIter)->y, (*PartIter)->tex, (*PartIter)->rot, (*PartIter)->scale, (*PartIter)->scale, RGBA( (*PartIter)->red, (*PartIter)->green, (*PartIter)->blue, ClampVar8((*PartIter)->alpha*255) ) );
            } else {
                free( (*PartIter) );
                ParticleList.erase(PartIter);
                continue;
            }
            ParticleCnt += 1;
            PartIter++;
        }


// Draw Crosshair
        GRRLIB_DrawImg( P1MX, P1MY, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
		
		if(p>=0){

		if((p/100)>59){
		//GRRLIB_Printf ( 450, 48, GFX_Font, 0x008000FF, 1, "Temps restant: %.2f", (float)p/100*0.0167);
		}
		else{
		//GRRLIB_Printf ( 450, 48, GFX_Font, 0x008000FF, 1, "Temps restant: %d", (p/100));
		}
		p--;
		}

		if(p==0){
		page++;
		p=50;
		}
		

		



 // Renders the Scene

    GRRLIB_Render();
        FPS = CalculateFrameRate();
int a=0;
int b=0;
int c=0;
int d=0;
int e=0;
int f=0;
int g=0;
int h=0;
int i=0;
int j=0;
int k=0;
int l=0;
int m=0;
int n=0;
int o=0;

int q=0;
int r=0;
int s=0;
int t=0;
//int u=0;



 switch(page)
        {
        case 0:
            GRRLIB_DrawImg( 0, 0, GFX_Pic1, 0, 1, 1, 0xFFFFFFFF|i );
			
if(P1MY>90 && P1MY<410 && P1MX>30 && P1MX<130) // PLAY
      {
          //GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }
	  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);
		
		
		
        break;


            case 1:
while(a<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic2, 0, 1, 1, RGBA(255, 255, 255, 255) );
a++;}
    if(P1MY>100 && P1MY<400 && P1MX>512 && P1MX<612) // PLAY
      {
          //GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }
  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

            case 2:
while(b<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic3, 0, 1, 1, RGBA(255, 255, 255, 255) );
b++;}
    if(P1MY>110 && P1MY<550 && P1MX>190 && P1MX<260) // PLAY
      {
          //GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }
  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

            case 3:
while(c<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic4, 0, 1, 1, RGBA(255, 255, 255, 255) );
c++;}
    if(P1MY>90 && P1MY<400 && P1MX>160 && P1MX<240) // PLAY
      {
          //GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }
  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

            case 4:

               while(d<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic5, 0, 1, 1, RGBA(255, 255, 255, 255) );
d++;}
    if(P1MY>120 && P1MY<380 && P1MX>30 && P1MX<100) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>110 && P1MY<420 && P1MX>375 && P1MX<465) // PLAY
      {
  //        GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point=point-5;
      }
	  }

  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

            case 5:

         while(e<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic6, 0, 1, 1, RGBA(255, 255, 255, 255) );
e++;}
               if(P1MY>115 && P1MY<325 && P1MX>365 && P1MX<425) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }
  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

            case 6:

                        while(f<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic7, 0, 1, 1, RGBA(255, 255, 255, 255) );
f++;}
                if(P1MY>110 && P1MY<350 && P1MX>190 && P1MX<260) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	   if(P1MY>75 && P1MY<385 && P1MX>400 && P1MX<490) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point=point-5;
      }
	  }

  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;


            case 7:

                       while(g<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic8, 0, 1, 1, RGBA(255, 255, 255, 255) );
g++;}
               if(P1MY>110 && P1MY<410 && P1MX>30 && P1MX<130) // PLAY
      {
   //       GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	 if(P1MY>90 && P1MY<290 && P1MX>540 && P1MX<605) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }
  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

   case 8:

                       while(h<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic8, 0, 1, 1, RGBA(255, 255, 255, 255) );
h++;}
               if(P1MY>110 && P1MY<410 && P1MX>30 && P1MX<130) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	 if(P1MY>90 && P1MY<290 && P1MX>540 && P1MX<605) // PLAY
      {
  //        GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }
  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;


            case 9:
while(i<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic9, 0, 1, 1, RGBA(255, 255, 255, 255) );
i++;}
        if(P1MY>110 && P1MY<390 && P1MX>380 && P1MX<470) // PLAY
      {
   //       GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }
  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

            case 10:
while(j<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic10, 0, 1, 1, RGBA(255, 255, 255, 255) );
j++;}
        if(P1MY>120 && P1MY<370 && P1MX>25 && P1MX<105) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }
  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

            case 11:

               while(k<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic11, 0, 1, 1, RGBA(255, 255, 255, 255) );
k++;}
        if(P1MY>130 && P1MY<440 && P1MX>75 && P1MX<170) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point=point-5;
      }
	  }

	    if(P1MY>110 && P1MY<390 && P1MX>515 && P1MX<605) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }
  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

            case 12:
         while(l<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic12, 0, 1, 1, RGBA(255, 255, 255, 255) );
l++;}
                if(P1MY>90 && P1MY<380 && P1MX>155 && P1MX<245) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	   if(P1MY>95 && P1MY<405 && P1MX>310 && P1MX<390) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point=point-5;
      }
	  }

  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

            case 13:

                        while(m<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic13, 0, 1, 1, RGBA(255, 255, 255, 255) );
m++;}
      if(P1MY>110 && P1MY<410 && P1MX>30 && P1MX<120) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>100 && P1MY<390 && P1MX>155 && P1MX<245) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>95 && P1MY<350 && P1MX>360 && P1MX<440) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>95 && P1MY<395 && P1MX>510 && P1MX<610) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }
  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

         case 14:

                        while(n<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic13, 0, 1, 1, RGBA(255, 255, 255, 255) );
n++;}
      if(P1MY>110 && P1MY<410 && P1MX>30 && P1MX<120) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>100 && P1MY<390 && P1MX>155 && P1MX<245) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>95 && P1MY<350 && P1MX>360 && P1MX<440) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>95 && P1MY<395 && P1MX>510 && P1MX<610) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
       GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

                         case 15:

                        while(o<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic13, 0, 1, 1, RGBA(255, 255, 255, 255) );
o++;}
       if(P1MY>110 && P1MY<410 && P1MX>30 && P1MX<120) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>100 && P1MY<390 && P1MX>155 && P1MX<245) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>95 && P1MY<350 && P1MX>360 && P1MX<440) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>95 && P1MY<395 && P1MX>510 && P1MX<610) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);
                break;

                         case 16:

                        while(q<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic13, 0, 1, 1, RGBA(255, 255, 255, 255) );
q++;}
      if(P1MY>110 && P1MY<410 && P1MX>30 && P1MX<120) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>100 && P1MY<390 && P1MX>155 && P1MX<245) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>95 && P1MY<350 && P1MX>360 && P1MX<440) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>120 && P1MY<435 && P1MX>495 && P1MX<600) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point=point-5;
      }
	  }

  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;

            case 17:

                       while(r<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic14, 0, 1, 1, RGBA(255, 255, 255, 255) );
r++;}
      if(P1MY>110 && P1MY<410 && P1MX>30 && P1MX<120) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>100 && P1MY<390 && P1MX>155 && P1MX<245) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>95 && P1MY<350 && P1MX>360 && P1MX<440) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>120 && P1MY<435 && P1MX>495 && P1MX<600) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point=point-5;
      }
	  }

  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;


 case 18:

                       while(s<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic14, 0, 1, 1, RGBA(255, 255, 255, 255) );
s++;}
      if(P1MY>110 && P1MY<410 && P1MX>30 && P1MX<120) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>100 && P1MY<390 && P1MX>155 && P1MX<245) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>95 && P1MY<350 && P1MX>360 && P1MX<440) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>120 && P1MY<435 && P1MX>495 && P1MX<600) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point=point-5;
      }
	  }

  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;




 case 19:

                       while(t<50){

                GRRLIB_DrawImg( 0, 0, GFX_Pic14, 0, 1, 1, RGBA(255, 255, 255, 255) );
t++;}
      if(P1MY>110 && P1MY<410 && P1MX>30 && P1MX<120) // PLAY
      {
 //         GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>100 && P1MY<390 && P1MX>155 && P1MX<245) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>95 && P1MY<350 && P1MX>360 && P1MX<440) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point++;
      }
	  }

	  if(P1MY>120 && P1MY<435 && P1MX>495 && P1MX<600) // PLAY
      {
//          GRRLIB_DrawImg( 100, 200, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(WPADKeyDown & WPAD_BUTTON_B) {
			point=point-5;
      }
	  }
  GRRLIB_Rectangle( 28, 48, 200, 16, RGBA(0, 0, 0, 160), 1 );
        GRRLIB_Printf   ( 32, 48, GFX_Font, 0xFFFFFFFF, 1, "VOUS AVEZ SALI %d COSTUMES",point);

                break;




            case 20:

               if(point>=12) {
				print3();
				} else {
				printover2();
				page=0;
				point=0;
				}
                break;

            default:
GRRLIB_DrawImg( 0, 0, GFX_Pic1, 0, 1, 1, RGBA(255, 255, 255, 255) );
if(P1MX>90 && P1MX<450 && P1MY>30 && P1MY<130) // PLAY
      {
         if(WPAD_ButtonsDown(0) & WPAD_BUTTON_B) {
		 do{
		 MP3Player_PlayBuffer(tir_mp3,tir_mp3_size,NULL);
		 }
		 while(MP3Player_IsPlaying()); 
		 
			point++;
      }
	  }

        }


         if (WPADKeyDown & WPAD_BUTTON_B) {
             createEffect( EFFECT_SMOKEBOMB, P1MX, P1MY );
            page++;
			p=50;
			

            if(page > 20) {

GRRLIB_FreeTexture(GFX_Pic1);
GRRLIB_DrawImg( 0, 0, GFX_Crosshair, 0, 1, 1, RGBA(255, 255, 255, 255) );}
        }

		

        if (WPADKeyDown & WPAD_BUTTON_HOME) {
            menujeu();
            
        }
    }
	MP3Player_Stop();
}

GXRModeObj* IR_Init() {
    GXRModeObj *rmode=NULL;
    rmode=VIDEO_GetPreferredMode(NULL);
    return rmode;
}

//---------------------------------------------------------------------------------

void jeton() {
GRRLIB_texImg* jeton;
	jeton=GRRLIB_LoadTexture(jeton_png);
	while(1) {
		WPAD_ScanPads();
		WPAD_SetDataFormat(WPAD_CHAN_0,WPAD_FMT_BTNS_ACC_IR);
		GRRLIB_DrawImg(0,0,jeton,0,1,1,0xFFFFFFFF);
		GRRLIB_Render();
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_B ) return;
	}
}

/*************************************************************************/



/**********************************************************************/

void print2instru() {
	GRRLIB_texImg* j2f;
	j2f=GRRLIB_LoadTexture(jeu2_png);
	while(1) {
		WPAD_ScanPads();
		WPAD_SetDataFormat(WPAD_CHAN_0,WPAD_FMT_BTNS_ACC_IR);
		GRRLIB_DrawImg(0,0,j2f,0,1,1,0xFFFFFFFF);
		GRRLIB_Render();
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_B ) return;
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_A ) {
			game2();
		}

	}
}

void print2() {
	GRRLIB_texImg* j2f;
	j2f=GRRLIB_LoadTexture(jeu2fr_png);
	while(1) {
		WPAD_ScanPads();
		WPAD_SetDataFormat(WPAD_CHAN_0,WPAD_FMT_BTNS_ACC_IR);
		GRRLIB_DrawImg(0,0,j2f,0,1,1,0xFFFFFFFF);
		GRRLIB_Render();
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_B ) return;
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_A ) {
			print2instru();
		}

	}
}



/**************************************************************************/

void game1() {
    int startx=0, starty=0;
    int x=0, y=0;
    int dirx=0, diry=0;
    int cptx=0, cpty=0;
    int bgx=-32, bgy=-32;
    float idperso=0;
    int i=0;
    int compt=0;
    float sinnonameno=0, oldsinnonameno=0;
	int sec=7800;
	int a=sec;

    GRRLIB_Init();
    GRRLIB_Settings.antialias = false;
    WPAD_Init();
    GRRLIB_ClipDrawing(0,0,rmode->fbWidth,rmode->efbHeight);

    GRRLIB_texImg *tex_tile1 = GRRLIB_LoadTexture(tile1_png);
	 GRRLIB_texImg *GFX_Font= GRRLIB_LoadTexturePNG(RGFX_Font);
	 GRRLIB_InitTileSet( GFX_Font, 8, 16, 32 );
    GRRLIB_InitTileSet(tex_tile1, TileMap1Width, TileMap1Height, 0);
    GRRLIB_texImg *tex_perso = GRRLIB_LoadTexture(perso_png);
    GRRLIB_InitTileSet(tex_perso, 64, 64, 0);
    GRRLIB_texImg *tex_bg = GRRLIB_LoadTexture(bg_png);
    GRRLIB_texImg *tex_nonameno = GRRLIB_LoadTexture(nonameno_png);
    GRRLIB_InitTileSet(tex_nonameno, 32, 32, 0);
	GRRLIB_texImg *pann=GRRLIB_LoadTexture(panneau_png);


	ASND_Init();
      MP3Player_Init();
     MP3Player_PlayBuffer(metro_mp3,metro_mp3_size,NULL);




    while(1) {



	 if (!MP3Player_IsPlaying()) MP3Player_PlayBuffer(metro_mp3,metro_mp3_size,NULL);
        WPAD_ScanPads();
        if (WPAD_ButtonsDown(0) & WPAD_BUTTON_HOME) {
			MP3Player_Stop();
			menujeu();
		}
		
        if((dirx==0) && (diry==0)) {
            if (WPAD_ButtonsHeld(0) & WPAD_BUTTON_LEFT) { diry=-4; idperso=15;}
            else if (WPAD_ButtonsHeld(0) & WPAD_BUTTON_RIGHT) { diry=4; idperso=15;}
            else if (WPAD_ButtonsHeld(0) & WPAD_BUTTON_DOWN) { dirx=-4 ; idperso=1;}
            else if (WPAD_ButtonsHeld(0) & WPAD_BUTTON_UP) { dirx=4 ; idperso=8;}
        }

        if((dirx==0) && (diry==0)) {
            idperso=0;
        }

        if(((Map1Info[9+starty][10+startx]==1) || (Map1Info[9+starty][11+startx]==1)) || ((Map1Info[9+starty][10+startx]==43786) || (Map1Info[9+starty][11+startx]==43786))) {
        }
        else {
            dirx=0;
            diry=-4;
        }

        if(dirx<0) {
            if((Map1Info[7+starty][12+startx]==8) || (Map1Info[7+starty][12+startx]==2) || (Map1Info[7+starty][12+startx]==5) || (Map1Info[8+starty][12+startx]==5)|| (Map1Info[8+starty][12+startx]==8) || (Map1Info[8+starty][12+startx]==2)) {
                dirx=0;
            }
            else {
                idperso++;
                if(idperso>7)
                    idperso=1;
            }

			if((Map1Info[7+starty][12+startx]==5) || (Map1Info[8+starty][12+startx]==5)){
			if(compt>=5){
			MP3Player_Stop();
			print2();
			}
			else{
			jeton();

			}
			}
	    if((Map1Info[7+starty][12+startx]==15)) {
			compt++;
			Map1Info[7+starty][12+startx]=0;
			Map1Data[7+starty][12+startx]=0;
			}
		if( (Map1Info[8+starty][12+startx]==15)){
		compt++;
		Map1Info[8+starty][12+startx]=0;
		Map1Data[8+starty][12+startx]=0;

		}
        }
        else if(dirx>0) {
            if((Map1Info[7+starty][9+startx]==8) || (Map1Info[7+starty][9+startx]==2) || (Map1Info[7+starty][9+startx]==5) || (Map1Info[8+starty][9+startx]==5) || (Map1Info[8+starty][9+startx]==8) || (Map1Info[8+starty][9+startx]==2)) {
                dirx=0;
            }
            else {
                idperso++;
                if(idperso>14)
                    idperso=8;
           }
	  if((Map1Info[7+starty][12+startx]==5) || (Map1Info[8+starty][12+startx]==5)){
				if(compt>=5){
				MP3Player_Stop();
			print2();
			}
			else{
			jeton();

						}
			}
	  if((Map1Info[7+starty][12+startx]==15) ){
			compt++;
			Map1Info[7+starty][12+startx]=0;
			Map1Data[7+starty][12+startx]=0;



		  }
	  if( (Map1Info[8+starty][12+startx]==15)){
		  compt++;
		  Map1Info[8+starty][12+startx]=0;
		  Map1Data[8+starty][12+startx]=0;
	  }
        }

        if(diry<0) {
            if((Map1Info[9+starty][10+startx]==1) || (Map1Info[9+starty][11+startx]==1)) {
                diry=0;
            }
        }
        if(diry!=0) {
            idperso++;
            if(idperso>22)
                idperso=16;
        }

        cptx+=dirx;
        if(dirx>0)
            bgx++;
        else if(dirx<0)
            bgx--;
        if((bgx>-1) ||(bgx<-63))
            bgx=-32;

        if(cptx==32) {
            cptx=0;
            dirx=0;
            startx--;
        }
        else if(cptx==-32) {
            cptx=0;
            dirx=0;
            startx++;
        }

        cpty+=diry;
        if(diry>0)
            bgy++;
        else if(diry<0)
            bgy--;
        if((bgy>-1) || (bgy<-63))
            bgy=-32;

        if(cpty==32) {
            cpty=0;
            diry=0;
            starty--;
        }
        else if(cpty==-32) {
            cpty=0;
            if(((Map1Info[9+starty][10+startx]==1) || (Map1Info[9+starty][11+startx]==1)) || ((Map1Info[9+starty][10+startx]==43786) || (Map1Info[9+starty][11+startx]==43786))) {
                diry=0;
            }
            starty++;
        }GRRLIB_DrawImg(bgx, bgy, tex_bg, 0, 1, 1, 0xFFFFFFFF);

        for(y=0; y<=(16); y++) {
            for(x=0; x<=(21); x++) {
                if(Map1Data[y+starty][x+startx] != 0) {
                    GRRLIB_DrawTile(x*TileMap1Width+cptx-TileMap1Width,y*TileMap1Height+cpty-TileMap1Height,tex_tile1,0,1,1,0xFFFFFFFF,Map1Data[y+starty][x+startx]-1);
                }
            }
        }
        GRRLIB_DrawTile(TileMap1Width*9,TileMap1Height*6,tex_perso,0,1,1,0xFFFFFFFF,(int)idperso);

        oldsinnonameno=sinnonameno;
        for(i=0; i<8; i++) {
            GRRLIB_DrawTile(TileMap1Width*(6+i),(TileMap1Height*10)+sin(sinnonameno)*64,tex_nonameno,0,1,1,0xFFFFFFFF,i);
            sinnonameno+=0.4F;
        }
        sinnonameno=oldsinnonameno+0.08F;

		GRRLIB_DrawImg(410, 28, pann, 0, 1, 1, 0xFFFFFFFF|i);

		if(a>=0){

		if((a/100)>59){
		GRRLIB_Printf ( 450, 48, GFX_Font, 0x008000FF, 1, " %.2f", (float)a/100*0.0167);
		}
		else{
		GRRLIB_Printf ( 450, 48, GFX_Font, 0x008000FF, 1, " %d", (a/100));
		}
		a--;
		}

		if(a==0){
		MP3Player_Stop();
		printover1();
		}

		GRRLIB_Printf ( 32, 48, GFX_Font, 0x008000FF, 1, "Nombre de jeton: %d", compt );
        GRRLIB_Render();
    }

	

    // Free some textures
    GRRLIB_FreeTexture(tex_tile1);
    GRRLIB_FreeTexture(tex_perso);
    GRRLIB_FreeTexture(tex_bg);
    GRRLIB_FreeTexture(tex_nonameno);
    GRRLIB_Exit();

    exit(0);
}

//---------------------------------------------------------------------------------


void credits() {
	GRRLIB_texImg* pic1;
	pic1=GRRLIB_LoadTexture(image_png);
	GRRLIB_texImg* pic2;
	pic2=GRRLIB_LoadTexture(image2_png);
	GRRLIB_texImg* pic3;
	pic3=GRRLIB_LoadTexture(image3_png);
	
	ASND_Init();
      MP3Player_Init();
	MP3Player_PlayBuffer(fin2_mp3,fin2_mp3_size,NULL);
	
	int i;
	for(i=0;i<255;i++) {

        GRRLIB_DrawImg(0,0,pic1,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();

		}
	GRRLIB_FreeTexture(pic1);

	for(i=0;i<255;i++) {

        GRRLIB_DrawImg(0,0,pic2,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();
		}
	GRRLIB_FreeTexture(pic2);


	for(i=0;i<255;i++) {

        GRRLIB_DrawImg(0,0,pic3,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();
		}
	GRRLIB_FreeTexture(pic3);

	MP3Player_Stop();
	
	menu();

}


void game3() {
	int rempli=0;
	int test=0;
	int repair=0;
	int repairv=0;
	float alcool=0;
	int temps=3000;
	struct orient_t orient;
	struct orient_t orient2;
	
	WPAD_SetVRes(WPAD_CHAN_ALL, rmode->fbWidth,rmode->xfbHeight);
	WPAD_SetDataFormat(WPAD_CHAN_1,WPAD_FMT_BTNS_ACC_IR);
	GRRLIB_texImg* fond=GRRLIB_LoadTexture(meta_png);
	GRRLIB_texImg* vide=GRRLIB_LoadTexture(verredroit_png);
	GRRLIB_texImg* moitie=GRRLIB_LoadTexture(verremoit_png);
	GRRLIB_texImg* plein=GRRLIB_LoadTexture(verreplein_png);
	GRRLIB_texImg* bu=GRRLIB_LoadTexture(verreret_png);
	GRRLIB_texImg* tier=GRRLIB_LoadTexture(verretier_png);
	GRRLIB_texImg* cote=GRRLIB_LoadTexture(verretourner_png);
	GRRLIB_texImg* boutd=GRRLIB_LoadTexture(vodkad_png);
	GRRLIB_texImg* boutinc=GRRLIB_LoadTexture(vodkainc_png);
	GRRLIB_texImg* verse=GRRLIB_LoadTexture(vodkaverse_png);
	GRRLIB_texImg* GFX_Font= GRRLIB_LoadTexturePNG(RGFX_Font);
	GRRLIB_InitTileSet( GFX_Font, 8, 16, 32 );
	
	ASND_Init();
      MP3Player_Init();

	while(1) {

		// Call WPAD_ScanPads each loop, this reads the latest controller states
		WPAD_ScanPads();

		// WPAD_ButtonsDown tells us which buttons were pressed in this loop
		// this is a "one shot" state which will not fire again until the button has been released
		u32 pressed = WPAD_ButtonsDown(0);
		WPAD_Orientation(WPAD_CHAN_0,&orient);
		u32 pressed2 = WPAD_ButtonsDown(1);
		WPAD_Orientation(WPAD_CHAN_1,&orient2);
		
		if(orient.pitch>60 && orient.pitch<120) {
			if(repair!=2) {
				if(rempli<3 && orient2.pitch<(-60) && orient2.pitch>(-120) && test==1) {
					MP3Player_PlayBuffer(eau_mp3,eau_mp3_size,NULL);
				}
			}
		}
		
		GRRLIB_DrawImg(0,0,fond,0,1,1,0xFFFFFFFF);
		
		if(repair==0) {
			GRRLIB_DrawImg(330,250,vide,0,1,1,0xFFFFFFFF);
		}
		
		if(repairv==0) {
			GRRLIB_DrawImg(350,70,boutd,0,1,1,0xFFFFFFFF);
		}
		
		if(orient.pitch<(-60) && orient.pitch>(-120)) {
			GRRLIB_DrawImg(350,70,boutd,0,1,1,0xFFFFFFFF);
			if(repair!=1) 
			repair=1;
			test=1;
		}
		
		if(orient.pitch>=(-60) && orient.pitch<=60) {
			GRRLIB_DrawImg(350,70,boutinc,0,1,1,0xFFFFFFFF);
			if(repair!=3)
			repair=3;
		}
		
		if(orient.pitch>60 && orient.pitch<120) {
			GRRLIB_DrawImg(350,70,verse,0,1,1,0xFFFFFFFF);
			if(repair!=2) {
				repair=2;
				if(rempli<3 && orient2.pitch<(-60) && orient2.pitch>(-120) && test==1) {
					rempli++;
					test=0;
				}
			}
		}
		
		
		if(orient2.pitch<(-60) && orient2.pitch>(-120)) {
			if(rempli==0) {
			GRRLIB_DrawImg(330,250,vide,0,1,1,0xFFFFFFFF);
			} 
			
			if(rempli==1) {
			GRRLIB_DrawImg(330,250,tier,0,1,1,0xFFFFFFFF);
			}
 
			if(rempli==2) {
			GRRLIB_DrawImg(330,250,moitie,0,1,1,0xFFFFFFFF);
			}
 
			if(rempli==3) {
			GRRLIB_DrawImg(330,250,plein,0,1,1,0xFFFFFFFF);
			} 
			if(repairv!=1)
			repairv=1;
		}
		
		if(orient2.pitch>=(-60) && orient2.pitch<=60) {
			GRRLIB_DrawImg(330,250,cote,0,1,1,0xFFFFFFFF);
			if(repairv!=3)
			repairv=3;
		}
		
		if(orient2.pitch>60 && orient2.pitch<120 ) {
			GRRLIB_DrawImg(330,250,bu,0,1,1,0xFFFFFFFF);
			if(repairv!=2) {
				repairv=2;
			}
			if(rempli==3) {
				alcool+=0.2;
			}
			rempli=0;
		}
		
		
        //GRRLIB_Render();

		// We return to the launcher application via exit
		if ( pressed & WPAD_BUTTON_HOME ) menujeu();
		if ( pressed2 & WPAD_BUTTON_HOME ) menujeu();
	
		if(temps>=0){

		GRRLIB_Printf ( 450, 20, GFX_Font, 0xFFFFFFFF, 1, "Le bar ferme dans: %d", (temps/100));
		temps--;
		}

		if(temps==0){
			break;
		}

		GRRLIB_Printf ( 32, 20, GFX_Font, 0xFFFFFFFF, 1, "Alcoolemie de ta cavaliere: %.1lf g/L", alcool );

		// Wait for the next frame
		GRRLIB_Render();
	}
	
	MP3Player_Stop();
	
	if(alcool>=2.0) {
		win();
	} else {
		printover3();
	}
	
}

void print3instru() {
	GRRLIB_texImg* j1f;
	j1f=GRRLIB_LoadTexture(jeu3_png);
	while(1) {
		WPAD_ScanPads();
		WPAD_SetDataFormat(WPAD_CHAN_0,WPAD_FMT_BTNS_ACC_IR);
		GRRLIB_DrawImg(0,0,j1f,0,1,1,0xFFFFFFFF);
		GRRLIB_Render();
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_B ) return;
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_A ) {
			game3();
		}

	}
}

void print3() {
	GRRLIB_texImg* j1f;
	j1f=GRRLIB_LoadTexture(jeu3intro_png);
	while(1) {
		WPAD_ScanPads();
		WPAD_SetDataFormat(WPAD_CHAN_0,WPAD_FMT_BTNS_ACC_IR);
		GRRLIB_DrawImg(0,0,j1f,0,1,1,0xFFFFFFFF);
		GRRLIB_Render();
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_B ) return;
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_A ) {
			print3instru();
		}

	}
}


void print1instru() {
	GRRLIB_texImg* j1f;
	j1f=GRRLIB_LoadTexture(jeu1_png);
	while(1) {
		WPAD_ScanPads();
		WPAD_SetDataFormat(WPAD_CHAN_0,WPAD_FMT_BTNS_ACC_IR);
		GRRLIB_DrawImg(0,0,j1f,0,1,1,0xFFFFFFFF);
		GRRLIB_Render();
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_B ) return;
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_A ) {
			game1();
		}

	}
}

void print1() {
	GRRLIB_texImg* j1f;
	j1f=GRRLIB_LoadTexture(jeu1fr_png);
	while(1) {
		WPAD_ScanPads();
		WPAD_SetDataFormat(WPAD_CHAN_0,WPAD_FMT_BTNS_ACC_IR);
		GRRLIB_DrawImg(0,0,j1f,0,1,1,0xFFFFFFFF);
		GRRLIB_Render();
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_B ) return;
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_A ) {
			print1instru();
		}

	}
}


void menujeu() {
	//menu principal
	GRRLIB_texImg* pic2;
	pic2=GRRLIB_LoadTexture(palm_png);
	GRRLIB_texImg* menu1;
	menu1=GRRLIB_LoadTexture(menuj1_png);
	GRRLIB_texImg* menu2;
	menu2=GRRLIB_LoadTexture(menuj1a_png);
	GRRLIB_texImg* menu3;
	menu3=GRRLIB_LoadTexture(menuj2_png);
	GRRLIB_texImg* menu4;
	menu4=GRRLIB_LoadTexture(menuj2a_png);
	GRRLIB_texImg* menu5;
	menu5=GRRLIB_LoadTexture(menuj3_png);
	GRRLIB_texImg* menu6;
	menu6=GRRLIB_LoadTexture(menuj3a_png);
	GRRLIB_texImg* menu7;
	menu7=GRRLIB_LoadTexture(menur_png);
	GRRLIB_texImg* menu8;
	menu8=GRRLIB_LoadTexture(menura_png);


	GRRLIB_texImg* pointer=GRRLIB_LoadTexture(billet_png);
	GRRLIB_SetMidHandle(pointer,true);
	ir_t irPointer;
	
	ASND_Init();
      MP3Player_Init();
     MP3Player_PlayBuffer(IntroMenu_mp3,IntroMenu_mp3_size,NULL);
	
	while(1) {
		
		if (!MP3Player_IsPlaying()) MP3Player_PlayBuffer(IntroMenu_mp3,IntroMenu_mp3_size,NULL);
		
		// Call WPAD_ScanPads each loop, this reads the latest controller states
		WPAD_ScanPads();
        WPAD_IR(WPAD_CHAN_0, &irPointer);
        GRRLIB_DrawImg(0,0,pic2,0,1,1,0xFFFFFFFF);
        GRRLIB_DrawImg(370,100,menu1,0,1,1,0xFFFFFFFF);
        GRRLIB_DrawImg(370,200,menu3,0,1,1,0xFFFFFFFF);
		GRRLIB_DrawImg(370,300,menu5,0,1,1,0xFFFFFFFF);
        GRRLIB_DrawImg(370,400,menu7,0,1,1,0xFFFFFFFF);
        //GRRLIB_DrawImg( irPointer.x, irPointer.y, pointer, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(irPointer.x>370 && irPointer.x<570 && irPointer.y>100 && irPointer.y<160) // PLAY
      {
         GRRLIB_DrawImg(370,100,menu2,0,1,1,0xFFFFFFFF);
         if(WPAD_ButtonsDown(0) & WPAD_BUTTON_A) {
			MP3Player_Stop();
			print1();
      }
	  }

         if(irPointer.x>370 && irPointer.x<570 && irPointer.y>200 && irPointer.y<260) // ABOUT
      {
         GRRLIB_DrawImg(370,200,menu4,0,1,1,0xFFFFFFFF);
         if(WPAD_ButtonsDown(0) & WPAD_BUTTON_A)
         {
			MP3Player_Stop();
            print2();
         }
	  }

		 if(irPointer.x>370 && irPointer.x<570 && irPointer.y>300 && irPointer.y<360) // PLAY
      {
         GRRLIB_DrawImg(370,300,menu6,0,1,1,0xFFFFFFFF);
         if(WPAD_ButtonsDown(0) & WPAD_BUTTON_A) {
			MP3Player_Stop();
			print3();
      }
	  }

         if(irPointer.x>370 && irPointer.x<570 && irPointer.y>400 && irPointer.y<460) // ABOUT
      {
         GRRLIB_DrawImg(370,400,menu8,0,1,1,0xFFFFFFFF);
         if(WPAD_ButtonsDown(0) & WPAD_BUTTON_A)
         {
            menu();
         }
      }
	    GRRLIB_DrawImg(irPointer.x, irPointer.y, pointer, 0, 1, 1, 0xFFFFFFFF);

		// We return to the launcher application via exit
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_HOME ) exit(0);
		GRRLIB_Render();
	}
	
	MP3Player_Stop();
	
	GRRLIB_FreeTexture(pic2);
	GRRLIB_FreeTexture(menu1);
	GRRLIB_FreeTexture(menu2);
	GRRLIB_FreeTexture(menu5);
	GRRLIB_FreeTexture(menu6);
	GRRLIB_FreeTexture(pointer);
	}

void menu() {
	//menu principal
	
	GRRLIB_texImg* pic2;
	pic2=GRRLIB_LoadTexture(palmeraie_png);
	GRRLIB_texImg* menu1;
	menu1=GRRLIB_LoadTexture(menu1_png);
	GRRLIB_texImg* menu2;
	menu2=GRRLIB_LoadTexture(menu2_png);
	GRRLIB_texImg* menu5;
	menu5=GRRLIB_LoadTexture(menu5_png);
	GRRLIB_texImg* menu6;
	menu6=GRRLIB_LoadTexture(menu6_png);

	GRRLIB_texImg* pointer=GRRLIB_LoadTexture(billet_png);
	GRRLIB_SetMidHandle(pointer,true);
	ir_t irPointer;
	
	ASND_Init();
      MP3Player_Init();
     MP3Player_PlayBuffer(IntroMenu_mp3,IntroMenu_mp3_size,NULL);
	
	while(1) {
		
		if (!MP3Player_IsPlaying()) MP3Player_PlayBuffer(IntroMenu_mp3,IntroMenu_mp3_size,NULL);
		
		// Call WPAD_ScanPads each loop, this reads the latest controller states
		WPAD_ScanPads();
        WPAD_IR(WPAD_CHAN_0, &irPointer);
        GRRLIB_DrawImg(0,0,pic2,0,1,1,0xFFFFFFFF);
        GRRLIB_DrawImg(100,200,menu1,0,1,1,0xFFFFFFFF);
        GRRLIB_DrawImg(100,350,menu5,0,1,1,0xFFFFFFFF);
        //GRRLIB_DrawImg( irPointer.x, irPointer.y, pointer, 0, 1, 1, RGBA(255, 255, 255, 255) );
         if(irPointer.x>100 && irPointer.x<400 && irPointer.y>200 && irPointer.y<300) // PLAY
      {
         GRRLIB_DrawImg(100,200,menu2,0,1,1,0xFFFFFFFF);
         if(WPAD_ButtonsDown(0) & WPAD_BUTTON_A) {
			menujeu();
      }
	  }

         if(irPointer.x>100 && irPointer.x<400 && irPointer.y>350 && irPointer.y<450) // ABOUT
      {
         GRRLIB_DrawImg(100,350,menu6,0,1,1,0xFFFFFFFF);
         if(WPAD_ButtonsDown(0) & WPAD_BUTTON_A)
         {
			MP3Player_Stop();
            credits();
         }
      }
	    GRRLIB_DrawImg(irPointer.x, irPointer.y, pointer, 0, 1, 1, 0xFFFFFFFF);

		// We return to the launcher application via exit
		if ( WPAD_ButtonsDown(0) & WPAD_BUTTON_HOME ) exit(0);
		GRRLIB_Render();
	}
	
	MP3Player_Stop();
	
	GRRLIB_FreeTexture(pic2);
	GRRLIB_FreeTexture(menu1);
	GRRLIB_FreeTexture(menu2);
	GRRLIB_FreeTexture(menu5);
	GRRLIB_FreeTexture(menu6);
	GRRLIB_FreeTexture(pointer);
}

void intro() {
	GRRLIB_texImg* pic1;
	pic1=GRRLIB_LoadTexture(icon_png);
	
	int i;
	for(i=0;i<255;i++) {

        GRRLIB_DrawImg(0,0,pic1,0,1,1,0xFFFFFFFF|i);
        GRRLIB_Render();
		}
	GRRLIB_FreeTexture(pic1);
	menu();
}

int main(int argc, char **argv) {
//---------------------------------------------------------------------------------
    GRRLIB_Init();

	WPAD_Init();

	GXRModeObj *rmode=IR_Init();
	WPAD_SetVRes(WPAD_CHAN_ALL, rmode->fbWidth,rmode->xfbHeight);

	WPAD_SetDataFormat(WPAD_CHAN_0,WPAD_FMT_BTNS_ACC_IR);
	GRRLIB_SetBackgroundColour(0x00, 0x00, 0x00, 0xFF);
	// Wait for Video setup to complete
	VIDEO_WaitVSync();

	intro();

	GRRLIB_Exit();
	return 0;
}



static void createEffect( u8 id, int _x, int _y ) {
    u8 _ColorAdd = 0;
    switch (id) {
        case EFFECT_SMOKEBOMB:
            for (u8 i = 0; i < 5; i++) {
                createParticle( 1, (_x + (RANDOM * 10)), (_y + (RANDOM * 10)), (1.4f+(RANDOM*0.20)), 1.0f, 64, 64, 64 );
            }
            for (u8 i = 0; i < 20; i++) {
                createParticle( 3, (_x + (RANDOM * 50)), (_y + (RANDOM * 50)), 1.25f, 1.5f, 92, 92, 92 );
            }
            for (u8 i = 0; i < 5; i++) {
                _ColorAdd = (RANDOM*75);
                createParticle( 2, (_x + (RANDOM * 40)), (_y + (RANDOM * 40)), (1.0f+(RANDOM*0.20)), 1.0f, 128+_ColorAdd, 128+_ColorAdd, 128+_ColorAdd );
            }
            break;
    }
}


static void createParticle( u8 _id, int _x, int _y, float _scale, float _alpha, u8 _red, u8 _green, u8 _blue ) {
    Particle *part = (struct Particle *)calloc(1, sizeof(Particle));
    part->id  = _id;
    part->x   = _x;
    part->y   = _y;
    part->rot   = rand() % 360;
    part->red   = _red;
    part->green = _green;
    part->blue  = _blue;
    part->scale = _scale;
    part->alpha = _alpha;

    part->tex = GFX_Smoke;
    part->sy = RANDOM;
    part->sx = RANDOM;
    part->sscale = 0.9985;
    part->salpha = 0.985;
    switch (part->id) {
        case 1:
            part->sy = RANDOM * 0.5;
            part->sx = RANDOM * 0.5;
            part->sscale = 0.999;
            part->salpha = 0.992;

            part->framecnt = 2;
            break;
        case 2:
            part->scolor = 0.98;
            part->salpha = 0.95;
            break;
        case 3:
            part->sy = (RANDOM * 8);
            part->sx = (RANDOM * 8);
            part->salpha = 0.85;
            part->scolor = 0.95;
            break;
    }
    ParticleListTmp.push_back( part );
}

static bool updateParticle( Particle *part ) {
    if (part->alpha < 0.05) { part->alpha -= 0.001; }
    if (part->alpha < 0.1) { part->alpha -= 0.001; }

    part->x += part->sx;
    part->y += part->sy;
    part->scale *= part->sscale;
    part->alpha *= part->salpha;
    switch (part->id) {
        case 1:
            if (part->alpha < 0.25) { part->alpha -= 0.001; }
            if (part->framecnt == 0) {
                part->framecnt = 20;
                part->red   -= 1;
                part->green -= 1;
                part->blue  -= 1;
            }
            part->framecnt -= 1;
            break;
        case 2:
        case 3:
            part->red   *= part->scolor;
            part->green *= part->scolor;
            part->blue  *= part->scolor;
            break;
    }
    if ((part->scale < 0) || (part->alpha < 0)) { return false; }
    return true;
}


static void ExitGame() {
    // Free all memory used by textures.
    for (vector<GRRLIB_texImg *>::iterator TexIter = TextureList.begin(); TexIter != TextureList.end(); TexIter++) {
        free((*TexIter)->data);
        free((*TexIter));
    }
    TextureList.clear();

    // Deinitialize GRRLIB & Video
    GRRLIB_Exit();

    // Exit application
    exit(0);
}

static u8 CalculateFrameRate() {
    static u8 frameCount = 0;
    static u32 lastTime;
    static u8 FPS = 0;
    u32 currentTime = ticks_to_millisecs(gettime());

    frameCount++;
    if(currentTime - lastTime > 1000) {
        lastTime = currentTime;
        FPS = frameCount;
        frameCount = 0;
    }
    return FPS;
}

/**
 * A helper function for the YCbCr -> RGB conversion.
 * Clamps the given value into a range of 0 - 255 and thus preventing an overflow.
 * @param Value The value to clamp. Using float to increase the precision. This makes a full spectrum (0 - 255) possible.
 * @return Returns a clean, clamped unsigned char.
 **/
static u8 ClampVar8 (f32 Value) {
    Value = roundf(Value);
    if      (Value < 0)    Value = 0;
    else if (Value > 255)  Value = 255;

    return (u8)Value;
}
